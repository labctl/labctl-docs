import{_ as e,o as t,c as a,a as n}from"./app.132cfa96.js";const f=JSON.parse('{"title":"Labctl config reference","description":"","frontmatter":{"cli":"labctl"},"headers":[{"level":2,"title":"CLI commands","slug":"cli-commands","link":"#cli-commands","children":[{"level":3,"title":"config vars","slug":"config-vars","link":"#config-vars","children":[]},{"level":3,"title":"config template","slug":"config-template","link":"#config-template","children":[]},{"level":3,"title":"config compare","slug":"config-compare","link":"#config-compare","children":[]},{"level":3,"title":"config commit","slug":"config-commit","link":"#config-commit","children":[]},{"level":3,"title":"config send","slug":"config-send","link":"#config-send","children":[]}]},{"level":2,"title":"CLI flags","slug":"cli-flags","link":"#cli-flags","children":[]},{"level":2,"title":"Examples","slug":"examples","link":"#examples","children":[]}],"relativePath":"reference/config.md","lastUpdated":1662362162000}'),s={name:"reference/config.md"},l=n(`<h1 id="labctl-config-reference" tabindex="-1">Labctl config reference <a class="header-anchor" href="#labctl-config-reference" aria-hidden="true">#</a></h1><h2 id="cli-commands" tabindex="-1">CLI commands <a class="header-anchor" href="#cli-commands" aria-hidden="true">#</a></h2><p>The CLI commands under <code>labctl config</code> allows you to interact with the <a href="/guide/config-engine">Config Engine</a>. It allows you to send commands to the router, render templates, or simply inspect one of the intermediate stages (variables &amp; templates).</p><details class="details custom-block"><summary><code>labctl config --help</code></summary><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">Usage: labctl config &lt;command&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Render a template.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Flags:</span></span>
<span class="line"><span style="color:#A6ACCD;">  -h, --help                                 Show context-sensitive help.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  -t, --topo=STRING                          topology file</span></span>
<span class="line"><span style="color:#A6ACCD;">  -p, --template-paths=TEMPLATE-PATHS,...    paths to search for templates</span></span>
<span class="line"><span style="color:#A6ACCD;">  -l, --template-list=TEMPLATE-LIST,...      template names to render</span></span>
<span class="line"><span style="color:#A6ACCD;">  -f, --filter=FILTER,...                    nodes to include</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Global Flags</span></span>
<span class="line"><span style="color:#A6ACCD;">  -d, --debug=INT          Enable debug mode.</span></span>
<span class="line"><span style="color:#A6ACCD;">      --settings=STRING    Settings yaml file.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Commands:</span></span>
<span class="line"><span style="color:#A6ACCD;">  config commit      Commit configuration on the node.</span></span>
<span class="line"><span style="color:#A6ACCD;">  config compare     Compare rendered templates to the node&#39;s config.</span></span>
<span class="line"><span style="color:#A6ACCD;">  config send        Send commands to the node (i.e. show)</span></span>
<span class="line"><span style="color:#A6ACCD;">  config template    Show rendered templates.</span></span>
<span class="line"><span style="color:#A6ACCD;">  config vars        Show variable inputs.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div></details><p>The available commands include</p><h3 id="config-vars" tabindex="-1">config vars <a class="header-anchor" href="#config-vars" aria-hidden="true">#</a></h3><p>The <code>config vars</code> command will prepare all the variables required for templating and display them on the console. This will not attempt to render any template</p><h3 id="config-template" tabindex="-1">config template <a class="header-anchor" href="#config-template" aria-hidden="true">#</a></h3><p>The <code>config template</code> command will render the templates and display the output on the terminal. This allows you to test your templates without sending anyting to the nodes</p><h3 id="config-compare" tabindex="-1">config compare <a class="header-anchor" href="#config-compare" aria-hidden="true">#</a></h3><p>The <code>config compare</code> command will render the template and send it to the node with a compare transaction. At the end of the transaction the changes will be discarded. This allows you to see what changes the template in question will have on the node&#39;s configuration</p><p>Note: This relies on the capability of the target node to support transactions.</p><h3 id="config-commit" tabindex="-1">config commit <a class="header-anchor" href="#config-commit" aria-hidden="true">#</a></h3><p>The <code>config commit</code> command will render the templates and commit the configuration to the target node.</p><h3 id="config-send" tabindex="-1">config send <a class="header-anchor" href="#config-send" aria-hidden="true">#</a></h3><p>The <code>config send</code> command will render the templates and send the commands to the target node without any transactions. This allows you to do show commands on the target node.</p><h2 id="cli-flags" tabindex="-1">CLI flags <a class="header-anchor" href="#cli-flags" aria-hidden="true">#</a></h2><p>The following flags are available for the config commands</p><table><thead><tr><th style="text-align:left;">Flag</th><th></th><th></th><th>Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>--topo</code></td><td><code>-t</code></td><td>\u2714</td><td>the topology file</td></tr><tr><td style="text-align:left;"><code>--template-paths</code></td><td><code>-p</code></td><td>\u2714</td><td>paths to search for templates (in order)</td></tr><tr><td style="text-align:left;"><code>--template-list</code></td><td><code>-l</code></td><td>\u2714</td><td>template names to render</td></tr><tr><td style="text-align:left;"><code>--filter</code></td><td><code>-f</code></td><td></td><td>nodes to include</td></tr><tr><td style="text-align:left;"><code>--debug</code></td><td><code>-d</code></td><td></td><td>debug count, i.e. <code>-d</code>, <code>-ddd</code> or <code>--debug=3</code></td></tr><tr><td style="text-align:left;"><code>--settings</code></td><td></td><td></td><td>Settings file</td></tr></tbody></table><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h2><p><code>labctl config vars</code></p>`,21),o=[l];function c(d,i,r,p,h,m){return t(),a("div",null,o)}const u=e(s,[["render",c]]);export{f as __pageData,u as default};
